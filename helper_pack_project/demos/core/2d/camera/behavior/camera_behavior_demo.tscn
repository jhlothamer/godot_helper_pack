[gd_scene load_steps=10 format=2]

[ext_resource path="res://addons/godot_helper_pack/core/2d/camera/behavior/camera_limiter.gd" type="Script" id=1]
[ext_resource path="res://addons/godot_helper_pack/core/2d/camera/behavior/camera_move.gd" type="Script" id=2]
[ext_resource path="res://addons/godot_helper_pack/core/2d/camera/behavior/camera_shake.gd" type="Script" id=3]
[ext_resource path="res://addons/godot_helper_pack/core/2d/camera/behavior/camera_zoom.gd" type="Script" id=4]
[ext_resource path="res://demos/core/2d/camera/behavior/camera_behavior_demo.gd" type="Script" id=5]

[sub_resource type="OpenSimplexNoise" id=1]

[sub_resource type="NoiseTexture" id=2]
seamless = true
noise = SubResource( 1 )

[sub_resource type="Gradient" id=3]

[sub_resource type="GradientTexture" id=4]
gradient = SubResource( 3 )
width = 2000

[node name="CameraBehaviorDemo" type="Node2D"]
script = ExtResource( 5 )

[node name="Background" type="TextureRect" parent="."]
margin_left = -2000.0
margin_top = -2000.0
margin_right = 2000.0
margin_bottom = 2000.0
rect_min_size = Vector2( 4000, 4000 )
texture = SubResource( 2 )
stretch_mode = 2
__meta__ = {
"_edit_group_": true,
"_edit_lock_": true,
"_edit_use_anchors_": false
}

[node name="QuadColor1" type="TextureRect" parent="Background"]
self_modulate = Color( 0.262745, 1, 0, 0.501961 )
margin_left = 2000.0
margin_top = 2000.0
margin_right = 4000.0
margin_bottom = 4000.0
rect_min_size = Vector2( 2000, 2000 )
rect_rotation = -90.0
texture = SubResource( 4 )
stretch_mode = 2
__meta__ = {
"_edit_group_": true,
"_edit_lock_": true,
"_edit_use_anchors_": false
}

[node name="QuadColor2" type="TextureRect" parent="Background"]
self_modulate = Color( 0.87451, 1, 0, 0.501961 )
margin_left = 2000.0
margin_top = 4000.0
margin_right = 4000.0
margin_bottom = 6000.0
rect_min_size = Vector2( 2000, 2000 )
rect_rotation = -90.0
texture = SubResource( 4 )
stretch_mode = 2
__meta__ = {
"_edit_group_": true,
"_edit_lock_": true,
"_edit_use_anchors_": false
}

[node name="QuadColor3" type="TextureRect" parent="Background"]
self_modulate = Color( 0, 0.243137, 1, 0.501961 )
margin_top = 4000.0
margin_right = 2000.0
margin_bottom = 6000.0
rect_min_size = Vector2( 2000, 2000 )
rect_rotation = -90.0
texture = SubResource( 4 )
stretch_mode = 2
__meta__ = {
"_edit_group_": true,
"_edit_lock_": true,
"_edit_use_anchors_": false
}

[node name="QuadColor4" type="TextureRect" parent="Background"]
self_modulate = Color( 1, 0, 0.164706, 0.501961 )
margin_top = 2000.0
margin_right = 2000.0
margin_bottom = 4000.0
rect_min_size = Vector2( 2000, 2000 )
rect_rotation = -90.0
texture = SubResource( 4 )
stretch_mode = 2
__meta__ = {
"_edit_group_": true,
"_edit_lock_": true,
"_edit_use_anchors_": false
}

[node name="Camera2D" type="Camera2D" parent="."]
current = true
limit_left = -2000
limit_top = -2000
limit_right = 2000
limit_bottom = 2000
editor_draw_limits = true

[node name="CameraMove2D" type="Node" parent="Camera2D"]
script = ExtResource( 2 )

[node name="CameraZoom2D" type="Node" parent="Camera2D"]
script = ExtResource( 4 )
min_camera_zoom = 0.5
max_camera_zoom = 5.0

[node name="CameraShake" type="Node" parent="Camera2D"]
script = ExtResource( 3 )

[node name="CameraLimiter" type="Node" parent="Camera2D"]
script = ExtResource( 1 )

[node name="CanvasLayer" type="CanvasLayer" parent="."]

[node name="VBoxContainer" type="VBoxContainer" parent="CanvasLayer"]
anchor_left = 1.0
anchor_right = 1.0
margin_left = -120.0
margin_top = 10.0
margin_right = -10.0
margin_bottom = 50.0
custom_constants/separation = 10
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": false
}

[node name="ShakeCameraBtn" type="Button" parent="CanvasLayer/VBoxContainer"]
margin_right = 110.0
margin_bottom = 20.0
focus_mode = 0
enabled_focus_mode = 0
text = "Shake Camera"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="LimitCameraBtn" type="Button" parent="CanvasLayer/VBoxContainer"]
margin_top = 30.0
margin_right = 110.0
margin_bottom = 50.0
focus_mode = 0
enabled_focus_mode = 0
text = "Limit Camera"
__meta__ = {
"_edit_use_anchors_": false
}
[connection signal="pressed" from="CanvasLayer/VBoxContainer/ShakeCameraBtn" to="." method="_on_ShakeCameraBtn_pressed"]
[connection signal="pressed" from="CanvasLayer/VBoxContainer/LimitCameraBtn" to="." method="_on_LimitCameraBtn_pressed"]
